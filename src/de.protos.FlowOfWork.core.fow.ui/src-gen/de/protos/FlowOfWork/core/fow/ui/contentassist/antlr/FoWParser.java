/*
* generated by Xtext
*/
package de.protos.FlowOfWork.core.fow.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.protos.FlowOfWork.core.fow.services.FoWGrammarAccess;

public class FoWParser extends AbstractContentAssistParser {
	
	@Inject
	private FoWGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal.InternalFoWParser createParser() {
		de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal.InternalFoWParser result = new de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal.InternalFoWParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getModelAccess().getAlternatives(), "rule__Model__Alternatives");
					put(grammarAccess.getRoleAccess().getGroup(), "rule__Role__Group__0");
					put(grammarAccess.getWorkProductAccess().getGroup(), "rule__WorkProduct__Group__0");
					put(grammarAccess.getPortAccess().getGroup(), "rule__Port__Group__0");
					put(grammarAccess.getActivityAccess().getGroup(), "rule__Activity__Group__0");
					put(grammarAccess.getActivityAccess().getGroup_4(), "rule__Activity__Group_4__0");
					put(grammarAccess.getActivityAccess().getGroup_5(), "rule__Activity__Group_5__0");
					put(grammarAccess.getActivityRefAccess().getGroup(), "rule__ActivityRef__Group__0");
					put(grammarAccess.getModelAccess().getActivitiesAssignment_0(), "rule__Model__ActivitiesAssignment_0");
					put(grammarAccess.getModelAccess().getRolesAssignment_1(), "rule__Model__RolesAssignment_1");
					put(grammarAccess.getModelAccess().getWorkProductsAssignment_2(), "rule__Model__WorkProductsAssignment_2");
					put(grammarAccess.getRoleAccess().getNameAssignment_1(), "rule__Role__NameAssignment_1");
					put(grammarAccess.getWorkProductAccess().getNameAssignment_1(), "rule__WorkProduct__NameAssignment_1");
					put(grammarAccess.getPortAccess().getNameAssignment_0(), "rule__Port__NameAssignment_0");
					put(grammarAccess.getPortAccess().getTypeAssignment_2(), "rule__Port__TypeAssignment_2");
					put(grammarAccess.getActivityAccess().getNameAssignment_1(), "rule__Activity__NameAssignment_1");
					put(grammarAccess.getActivityAccess().getRoleAssignment_3(), "rule__Activity__RoleAssignment_3");
					put(grammarAccess.getActivityAccess().getInPortsAssignment_4_1(), "rule__Activity__InPortsAssignment_4_1");
					put(grammarAccess.getActivityAccess().getOutPortsAssignment_5_1(), "rule__Activity__OutPortsAssignment_5_1");
					put(grammarAccess.getActivityAccess().getActivityRefsAssignment_6(), "rule__Activity__ActivityRefsAssignment_6");
					put(grammarAccess.getActivityRefAccess().getNameAssignment_1(), "rule__ActivityRef__NameAssignment_1");
					put(grammarAccess.getActivityRefAccess().getTypeAssignment_3(), "rule__ActivityRef__TypeAssignment_3");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal.InternalFoWParser typedParser = (de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal.InternalFoWParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FoWGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FoWGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
