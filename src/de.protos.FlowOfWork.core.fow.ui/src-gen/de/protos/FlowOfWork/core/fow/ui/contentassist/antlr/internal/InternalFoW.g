/*
* generated by Xtext
*/
grammar InternalFoW;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.protos.FlowOfWork.core.fow.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.protos.FlowOfWork.core.fow.services.FoWGrammarAccess;

}

@parser::members {
 
 	private FoWGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(FoWGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)*
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getGroup()); }
(rule__Role__Group__0)
{ after(grammarAccess.getRoleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWorkProduct
entryRuleWorkProduct 
:
{ before(grammarAccess.getWorkProductRule()); }
	 ruleWorkProduct
{ after(grammarAccess.getWorkProductRule()); } 
	 EOF 
;

// Rule WorkProduct
ruleWorkProduct
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWorkProductAccess().getGroup()); }
(rule__WorkProduct__Group__0)
{ after(grammarAccess.getWorkProductAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePort
entryRulePort 
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPortAccess().getGroup()); }
(rule__Port__Group__0)
{ after(grammarAccess.getPortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivity
entryRuleActivity 
:
{ before(grammarAccess.getActivityRule()); }
	 ruleActivity
{ after(grammarAccess.getActivityRule()); } 
	 EOF 
;

// Rule Activity
ruleActivity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityAccess().getGroup()); }
(rule__Activity__Group__0)
{ after(grammarAccess.getActivityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityRef
entryRuleActivityRef 
:
{ before(grammarAccess.getActivityRefRule()); }
	 ruleActivityRef
{ after(grammarAccess.getActivityRefRule()); } 
	 EOF 
;

// Rule ActivityRef
ruleActivityRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityRefAccess().getGroup()); }
(rule__ActivityRef__Group__0)
{ after(grammarAccess.getActivityRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getActivitiesAssignment_0()); }
(rule__Model__ActivitiesAssignment_0)
{ after(grammarAccess.getModelAccess().getActivitiesAssignment_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getRolesAssignment_1()); }
(rule__Model__RolesAssignment_1)
{ after(grammarAccess.getModelAccess().getRolesAssignment_1()); }
)

    |(
{ before(grammarAccess.getModelAccess().getWorkProductsAssignment_2()); }
(rule__Model__WorkProductsAssignment_2)
{ after(grammarAccess.getModelAccess().getWorkProductsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Role__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__0__Impl
	rule__Role__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleKeyword_0()); }

	'Role' 

{ after(grammarAccess.getRoleAccess().getRoleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__1__Impl
	rule__Role__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameAssignment_1()); }
(rule__Role__NameAssignment_1)
{ after(grammarAccess.getRoleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Role__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Role__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Role__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getRoleAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WorkProduct__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WorkProduct__Group__0__Impl
	rule__WorkProduct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkProduct__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkProductAccess().getWorkProductKeyword_0()); }

	'WorkProduct' 

{ after(grammarAccess.getWorkProductAccess().getWorkProductKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WorkProduct__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WorkProduct__Group__1__Impl
	rule__WorkProduct__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkProduct__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkProductAccess().getNameAssignment_1()); }
(rule__WorkProduct__NameAssignment_1)
{ after(grammarAccess.getWorkProductAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WorkProduct__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WorkProduct__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkProduct__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkProductAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getWorkProductAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Port__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getNameAssignment_0()); }
(rule__Port__NameAssignment_0)
{ after(grammarAccess.getPortAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getPortAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Port__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getTypeAssignment_2()); }
(rule__Port__TypeAssignment_2)
{ after(grammarAccess.getPortAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Activity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__0__Impl
	rule__Activity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getActivityKeyword_0()); }

	'Activity' 

{ after(grammarAccess.getActivityAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__1__Impl
	rule__Activity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getNameAssignment_1()); }
(rule__Activity__NameAssignment_1)
{ after(grammarAccess.getActivityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__2__Impl
	rule__Activity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getRoleKeyword_2()); }

	'role' 

{ after(grammarAccess.getActivityAccess().getRoleKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__3__Impl
	rule__Activity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getRoleAssignment_3()); }
(rule__Activity__RoleAssignment_3)
{ after(grammarAccess.getActivityAccess().getRoleAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__4__Impl
	rule__Activity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getGroup_4()); }
(rule__Activity__Group_4__0)*
{ after(grammarAccess.getActivityAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__5__Impl
	rule__Activity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getGroup_5()); }
(rule__Activity__Group_5__0)*
{ after(grammarAccess.getActivityAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__6__Impl
	rule__Activity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getActivityRefsAssignment_6()); }
(rule__Activity__ActivityRefsAssignment_6)*
{ after(grammarAccess.getActivityAccess().getActivityRefsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getSemicolonKeyword_7()); }

	';' 

{ after(grammarAccess.getActivityAccess().getSemicolonKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Activity__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group_4__0__Impl
	rule__Activity__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getInputKeyword_4_0()); }

	'input' 

{ after(grammarAccess.getActivityAccess().getInputKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getInPortsAssignment_4_1()); }
(rule__Activity__InPortsAssignment_4_1)
{ after(grammarAccess.getActivityAccess().getInPortsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Activity__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group_5__0__Impl
	rule__Activity__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getOutputKeyword_5_0()); }

	'output' 

{ after(grammarAccess.getActivityAccess().getOutputKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Activity__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Activity__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getOutPortsAssignment_5_1()); }
(rule__Activity__OutPortsAssignment_5_1)
{ after(grammarAccess.getActivityAccess().getOutPortsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityRef__Group__0__Impl
	rule__ActivityRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getSubActivityKeyword_0()); }

	'subActivity' 

{ after(grammarAccess.getActivityRefAccess().getSubActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityRef__Group__1__Impl
	rule__ActivityRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getNameAssignment_1()); }
(rule__ActivityRef__NameAssignment_1)
{ after(grammarAccess.getActivityRefAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityRef__Group__2__Impl
	rule__ActivityRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getActivityRefAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityRef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getTypeAssignment_3()); }
(rule__ActivityRef__TypeAssignment_3)
{ after(grammarAccess.getActivityRefAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Model__ActivitiesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getActivitiesActivityParserRuleCall_0_0()); }
	ruleActivity{ after(grammarAccess.getModelAccess().getActivitiesActivityParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__RolesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getRolesRoleParserRuleCall_1_0()); }
	ruleRole{ after(grammarAccess.getModelAccess().getRolesRoleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__WorkProductsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getWorkProductsWorkProductParserRuleCall_2_0()); }
	ruleWorkProduct{ after(grammarAccess.getModelAccess().getWorkProductsWorkProductParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRoleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WorkProduct__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWorkProductAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getWorkProductAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getPortAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Port__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPortAccess().getTypeWorkProductCrossReference_2_0()); }
(
{ before(grammarAccess.getPortAccess().getTypeWorkProductIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getPortAccess().getTypeWorkProductIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getPortAccess().getTypeWorkProductCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActivityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__RoleAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getRoleRoleCrossReference_3_0()); }
(
{ before(grammarAccess.getActivityAccess().getRoleRoleIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getActivityAccess().getRoleRoleIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getActivityAccess().getRoleRoleCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__InPortsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getInPortsPortParserRuleCall_4_1_0()); }
	rulePort{ after(grammarAccess.getActivityAccess().getInPortsPortParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__OutPortsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getOutPortsPortParserRuleCall_5_1_0()); }
	rulePort{ after(grammarAccess.getActivityAccess().getOutPortsPortParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Activity__ActivityRefsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityAccess().getActivityRefsActivityRefParserRuleCall_6_0()); }
	ruleActivityRef{ after(grammarAccess.getActivityAccess().getActivityRefsActivityRefParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getActivityRefAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityRef__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityRefAccess().getTypeActivityCrossReference_3_0()); }
(
{ before(grammarAccess.getActivityRefAccess().getTypeActivityIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getActivityRefAccess().getTypeActivityIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getActivityRefAccess().getTypeActivityCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


