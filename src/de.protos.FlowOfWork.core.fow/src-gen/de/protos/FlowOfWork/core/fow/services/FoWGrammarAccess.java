/*
* generated by Xtext
*/

package de.protos.FlowOfWork.core.fow.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class FoWGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cActivitiesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cActivitiesActivityParserRuleCall_0_0 = (RuleCall)cActivitiesAssignment_0.eContents().get(0);
		private final Assignment cRolesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cRolesRoleParserRuleCall_1_0 = (RuleCall)cRolesAssignment_1.eContents().get(0);
		private final Assignment cWorkProductsAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cWorkProductsWorkProductParserRuleCall_2_0 = (RuleCall)cWorkProductsAssignment_2.eContents().get(0);
		
		//Model:
		//
		//	(activities+=Activity | roles+=Role | workProducts+=WorkProduct)*;
		public ParserRule getRule() { return rule; }

		//(activities+=Activity | roles+=Role | workProducts+=WorkProduct)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//activities+=Activity
		public Assignment getActivitiesAssignment_0() { return cActivitiesAssignment_0; }

		//Activity
		public RuleCall getActivitiesActivityParserRuleCall_0_0() { return cActivitiesActivityParserRuleCall_0_0; }

		//roles+=Role
		public Assignment getRolesAssignment_1() { return cRolesAssignment_1; }

		//Role
		public RuleCall getRolesRoleParserRuleCall_1_0() { return cRolesRoleParserRuleCall_1_0; }

		//workProducts+=WorkProduct
		public Assignment getWorkProductsAssignment_2() { return cWorkProductsAssignment_2; }

		//WorkProduct
		public RuleCall getWorkProductsWorkProductParserRuleCall_2_0() { return cWorkProductsWorkProductParserRuleCall_2_0; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Role:
		//
		//	"Role" name=ID ";";
		public ParserRule getRule() { return rule; }

		//"Role" name=ID ";"
		public Group getGroup() { return cGroup; }

		//"Role"
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class WorkProductElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WorkProduct");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkProductKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//WorkProduct:
		//
		//	"WorkProduct" name=ID ";";
		public ParserRule getRule() { return rule; }

		//"WorkProduct" name=ID ";"
		public Group getGroup() { return cGroup; }

		//"WorkProduct"
		public Keyword getWorkProductKeyword_0() { return cWorkProductKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeWorkProductCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeWorkProductIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeWorkProductCrossReference_2_0.eContents().get(1);
		
		//Port:
		//
		//	name=ID ":" type=[WorkProduct];
		public ParserRule getRule() { return rule; }

		//name=ID ":" type=[WorkProduct]
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//type=[WorkProduct]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[WorkProduct]
		public CrossReference getTypeWorkProductCrossReference_2_0() { return cTypeWorkProductCrossReference_2_0; }

		//ID
		public RuleCall getTypeWorkProductIDTerminalRuleCall_2_0_1() { return cTypeWorkProductIDTerminalRuleCall_2_0_1; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRoleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cRoleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRoleRoleCrossReference_3_0 = (CrossReference)cRoleAssignment_3.eContents().get(0);
		private final RuleCall cRoleRoleIDTerminalRuleCall_3_0_1 = (RuleCall)cRoleRoleCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInputKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInPortsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInPortsPortParserRuleCall_4_1_0 = (RuleCall)cInPortsAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cOutputKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cOutPortsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cOutPortsPortParserRuleCall_5_1_0 = (RuleCall)cOutPortsAssignment_5_1.eContents().get(0);
		private final Assignment cActivityRefsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cActivityRefsActivityRefParserRuleCall_6_0 = (RuleCall)cActivityRefsAssignment_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Activity:
		//
		//	"Activity" name=ID "role" role=[Role] ("input" inPorts+=Port)* ("output" outPorts+=Port)* activityRefs+=ActivityRef*
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//"Activity" name=ID "role" role=[Role] ("input" inPorts+=Port)* ("output" outPorts+=Port)* activityRefs+=ActivityRef* ";"
		public Group getGroup() { return cGroup; }

		//"Activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"role"
		public Keyword getRoleKeyword_2() { return cRoleKeyword_2; }

		//role=[Role]
		public Assignment getRoleAssignment_3() { return cRoleAssignment_3; }

		//[Role]
		public CrossReference getRoleRoleCrossReference_3_0() { return cRoleRoleCrossReference_3_0; }

		//ID
		public RuleCall getRoleRoleIDTerminalRuleCall_3_0_1() { return cRoleRoleIDTerminalRuleCall_3_0_1; }

		//("input" inPorts+=Port)*
		public Group getGroup_4() { return cGroup_4; }

		//"input"
		public Keyword getInputKeyword_4_0() { return cInputKeyword_4_0; }

		//inPorts+=Port
		public Assignment getInPortsAssignment_4_1() { return cInPortsAssignment_4_1; }

		//Port
		public RuleCall getInPortsPortParserRuleCall_4_1_0() { return cInPortsPortParserRuleCall_4_1_0; }

		//("output" outPorts+=Port)*
		public Group getGroup_5() { return cGroup_5; }

		//"output"
		public Keyword getOutputKeyword_5_0() { return cOutputKeyword_5_0; }

		//outPorts+=Port
		public Assignment getOutPortsAssignment_5_1() { return cOutPortsAssignment_5_1; }

		//Port
		public RuleCall getOutPortsPortParserRuleCall_5_1_0() { return cOutPortsPortParserRuleCall_5_1_0; }

		//activityRefs+=ActivityRef*
		public Assignment getActivityRefsAssignment_6() { return cActivityRefsAssignment_6; }

		//ActivityRef
		public RuleCall getActivityRefsActivityRefParserRuleCall_6_0() { return cActivityRefsActivityRefParserRuleCall_6_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class ActivityRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeActivityCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeActivityIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeActivityCrossReference_3_0.eContents().get(1);
		
		//ActivityRef:
		//
		//	"subActivity" name=ID ":" type=[Activity];
		public ParserRule getRule() { return rule; }

		//"subActivity" name=ID ":" type=[Activity]
		public Group getGroup() { return cGroup; }

		//"subActivity"
		public Keyword getSubActivityKeyword_0() { return cSubActivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[Activity]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[Activity]
		public CrossReference getTypeActivityCrossReference_3_0() { return cTypeActivityCrossReference_3_0; }

		//ID
		public RuleCall getTypeActivityIDTerminalRuleCall_3_0_1() { return cTypeActivityIDTerminalRuleCall_3_0_1; }
	}
	
	
	private ModelElements pModel;
	private RoleElements pRole;
	private WorkProductElements pWorkProduct;
	private PortElements pPort;
	private ActivityElements pActivity;
	private ActivityRefElements pActivityRef;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public FoWGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.protos.FlowOfWork.core.fow.FoW".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//
	//	(activities+=Activity | roles+=Role | workProducts+=WorkProduct)*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//Role:
	//
	//	"Role" name=ID ";";
	public RoleElements getRoleAccess() {
		return (pRole != null) ? pRole : (pRole = new RoleElements());
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//WorkProduct:
	//
	//	"WorkProduct" name=ID ";";
	public WorkProductElements getWorkProductAccess() {
		return (pWorkProduct != null) ? pWorkProduct : (pWorkProduct = new WorkProductElements());
	}
	
	public ParserRule getWorkProductRule() {
		return getWorkProductAccess().getRule();
	}

	//Port:
	//
	//	name=ID ":" type=[WorkProduct];
	public PortElements getPortAccess() {
		return (pPort != null) ? pPort : (pPort = new PortElements());
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}

	//Activity:
	//
	//	"Activity" name=ID "role" role=[Role] ("input" inPorts+=Port)* ("output" outPorts+=Port)* activityRefs+=ActivityRef*
	//
	//	";";
	public ActivityElements getActivityAccess() {
		return (pActivity != null) ? pActivity : (pActivity = new ActivityElements());
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//ActivityRef:
	//
	//	"subActivity" name=ID ":" type=[Activity];
	public ActivityRefElements getActivityRefAccess() {
		return (pActivityRef != null) ? pActivityRef : (pActivityRef = new ActivityRefElements());
	}
	
	public ParserRule getActivityRefRule() {
		return getActivityRefAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
