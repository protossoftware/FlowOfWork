/*
* generated by Xtext
*/

package de.protos.FlowOfWork.core.fow.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class FoWGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Model");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cActivitiesAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cActivitiesActivityParserRuleCall_0_0 = (RuleCall)cActivitiesAssignment_0.eContents().get(0);
		private final Assignment cRolesAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cRolesRoleParserRuleCall_1_0 = (RuleCall)cRolesAssignment_1.eContents().get(0);
		private final Assignment cWorkProductsAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cWorkProductsWorkProductParserRuleCall_2_0 = (RuleCall)cWorkProductsAssignment_2.eContents().get(0);
		private final Assignment cWorkProductTypesAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cWorkProductTypesWorkProductTypeParserRuleCall_3_0 = (RuleCall)cWorkProductTypesAssignment_3.eContents().get(0);
		private final Assignment cGuidancesAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cGuidancesGuidanceParserRuleCall_4_0 = (RuleCall)cGuidancesAssignment_4.eContents().get(0);
		private final Assignment cGuidanceTypesAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cGuidanceTypesGuidanceTypeParserRuleCall_5_0 = (RuleCall)cGuidanceTypesAssignment_5.eContents().get(0);
		private final Assignment cStatesAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cStatesStateParserRuleCall_6_0 = (RuleCall)cStatesAssignment_6.eContents().get(0);
		
		//Model:
		//
		//	(activities+=Activity | roles+=Role | workProducts+=WorkProduct | workProductTypes+=WorkProductType |
		//
		//	guidances+=Guidance | guidanceTypes+=GuidanceType | states+=State)*;
		public ParserRule getRule() { return rule; }

		//(activities+=Activity | roles+=Role | workProducts+=WorkProduct | workProductTypes+=WorkProductType |
		//
		//guidances+=Guidance | guidanceTypes+=GuidanceType | states+=State)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//activities+=Activity
		public Assignment getActivitiesAssignment_0() { return cActivitiesAssignment_0; }

		//Activity
		public RuleCall getActivitiesActivityParserRuleCall_0_0() { return cActivitiesActivityParserRuleCall_0_0; }

		//roles+=Role
		public Assignment getRolesAssignment_1() { return cRolesAssignment_1; }

		//Role
		public RuleCall getRolesRoleParserRuleCall_1_0() { return cRolesRoleParserRuleCall_1_0; }

		//workProducts+=WorkProduct
		public Assignment getWorkProductsAssignment_2() { return cWorkProductsAssignment_2; }

		//WorkProduct
		public RuleCall getWorkProductsWorkProductParserRuleCall_2_0() { return cWorkProductsWorkProductParserRuleCall_2_0; }

		//workProductTypes+=WorkProductType
		public Assignment getWorkProductTypesAssignment_3() { return cWorkProductTypesAssignment_3; }

		//WorkProductType
		public RuleCall getWorkProductTypesWorkProductTypeParserRuleCall_3_0() { return cWorkProductTypesWorkProductTypeParserRuleCall_3_0; }

		//guidances+=Guidance
		public Assignment getGuidancesAssignment_4() { return cGuidancesAssignment_4; }

		//Guidance
		public RuleCall getGuidancesGuidanceParserRuleCall_4_0() { return cGuidancesGuidanceParserRuleCall_4_0; }

		//guidanceTypes+=GuidanceType
		public Assignment getGuidanceTypesAssignment_5() { return cGuidanceTypesAssignment_5; }

		//GuidanceType
		public RuleCall getGuidanceTypesGuidanceTypeParserRuleCall_5_0() { return cGuidanceTypesGuidanceTypeParserRuleCall_5_0; }

		//states+=State
		public Assignment getStatesAssignment_6() { return cStatesAssignment_6; }

		//State
		public RuleCall getStatesStateParserRuleCall_6_0() { return cStatesStateParserRuleCall_6_0; }
	}

	public class NamedElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRoleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWorkProductTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWorkProductParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGuidanceTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cGuidanceParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cActivityParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//NamedElement:
		//
		//	Role | WorkProductType | WorkProduct | GuidanceType | Guidance | Activity;
		public ParserRule getRule() { return rule; }

		//Role | WorkProductType | WorkProduct | GuidanceType | Guidance | Activity
		public Alternatives getAlternatives() { return cAlternatives; }

		//Role
		public RuleCall getRoleParserRuleCall_0() { return cRoleParserRuleCall_0; }

		//WorkProductType
		public RuleCall getWorkProductTypeParserRuleCall_1() { return cWorkProductTypeParserRuleCall_1; }

		//WorkProduct
		public RuleCall getWorkProductParserRuleCall_2() { return cWorkProductParserRuleCall_2; }

		//GuidanceType
		public RuleCall getGuidanceTypeParserRuleCall_3() { return cGuidanceTypeParserRuleCall_3; }

		//Guidance
		public RuleCall getGuidanceParserRuleCall_4() { return cGuidanceParserRuleCall_4; }

		//Activity
		public RuleCall getActivityParserRuleCall_5() { return cActivityParserRuleCall_5; }
	}

	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Role");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextfieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextfieldTextfieldParserRuleCall_2_0 = (RuleCall)cTextfieldAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Role:
		//
		//	"Role" name=ID textfield=Textfield ";";
		public ParserRule getRule() { return rule; }

		//"Role" name=ID textfield=Textfield ";"
		public Group getGroup() { return cGroup; }

		//"Role"
		public Keyword getRoleKeyword_0() { return cRoleKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_2() { return cTextfieldAssignment_2; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_2_0() { return cTextfieldTextfieldParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class WorkProductTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WorkProductType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkProductTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextfieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextfieldTextfieldParserRuleCall_2_0 = (RuleCall)cTextfieldAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//WorkProductType:
		//
		//	"WorkProductType" name=ID textfield=Textfield ";";
		public ParserRule getRule() { return rule; }

		//"WorkProductType" name=ID textfield=Textfield ";"
		public Group getGroup() { return cGroup; }

		//"WorkProductType"
		public Keyword getWorkProductTypeKeyword_0() { return cWorkProductTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_2() { return cTextfieldAssignment_2; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_2_0() { return cTextfieldTextfieldParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class WorkProductElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "WorkProduct");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWorkProductKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeWorkProductTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeWorkProductTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeWorkProductTypeCrossReference_3_0.eContents().get(1);
		private final Assignment cTextfieldAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextfieldTextfieldParserRuleCall_4_0 = (RuleCall)cTextfieldAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//WorkProduct:
		//
		//	"WorkProduct" name=ID ":" type=[WorkProductType] textfield=Textfield //('States' states+=State (',' states+=State)*)? 
		//
		//	";";
		public ParserRule getRule() { return rule; }

		//"WorkProduct" name=ID ":" type=[WorkProductType] textfield=Textfield //('States' states+=State (',' states+=State)*)? 
		//
		//";"
		public Group getGroup() { return cGroup; }

		//"WorkProduct"
		public Keyword getWorkProductKeyword_0() { return cWorkProductKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[WorkProductType]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[WorkProductType]
		public CrossReference getTypeWorkProductTypeCrossReference_3_0() { return cTypeWorkProductTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeWorkProductTypeIDTerminalRuleCall_3_0_1() { return cTypeWorkProductTypeIDTerminalRuleCall_3_0_1; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_4() { return cTextfieldAssignment_4; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_4_0() { return cTextfieldTextfieldParserRuleCall_4_0; }

		////('States' states+=State (',' states+=State)*)? 
		//
		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class GuidanceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GuidanceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGuidanceTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextfieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextfieldTextfieldParserRuleCall_2_0 = (RuleCall)cTextfieldAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//GuidanceType:
		//
		//	"GuidanceType" name=ID textfield=Textfield ";";
		public ParserRule getRule() { return rule; }

		//"GuidanceType" name=ID textfield=Textfield ";"
		public Group getGroup() { return cGroup; }

		//"GuidanceType"
		public Keyword getGuidanceTypeKeyword_0() { return cGuidanceTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_2() { return cTextfieldAssignment_2; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_2_0() { return cTextfieldTextfieldParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class GuidanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Guidance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGuidanceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeGuidanceTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeGuidanceTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeGuidanceTypeCrossReference_3_0.eContents().get(1);
		private final Assignment cTextfieldAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTextfieldTextfieldParserRuleCall_4_0 = (RuleCall)cTextfieldAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Guidance:
		//
		//	"Guidance" name=ID ":" type=[GuidanceType] textfield=Textfield ";";
		public ParserRule getRule() { return rule; }

		//"Guidance" name=ID ":" type=[GuidanceType] textfield=Textfield ";"
		public Group getGroup() { return cGroup; }

		//"Guidance"
		public Keyword getGuidanceKeyword_0() { return cGuidanceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[GuidanceType]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[GuidanceType]
		public CrossReference getTypeGuidanceTypeCrossReference_3_0() { return cTypeGuidanceTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeGuidanceTypeIDTerminalRuleCall_3_0_1() { return cTypeGuidanceTypeIDTerminalRuleCall_3_0_1; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_4() { return cTextfieldAssignment_4; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_4_0() { return cTextfieldTextfieldParserRuleCall_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class StateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//State:
		//
		//	"State" name=ID ";";
		public ParserRule getRule() { return rule; }

		//"State" name=ID ";"
		public Group getGroup() { return cGroup; }

		//"State"
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeWorkProductCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeWorkProductIDTerminalRuleCall_0_0_1 = (RuleCall)cTypeWorkProductCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cStateAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cStateStateCrossReference_1_1_0 = (CrossReference)cStateAssignment_1_1.eContents().get(0);
		private final RuleCall cStateStateIDTerminalRuleCall_1_1_0_1 = (RuleCall)cStateStateCrossReference_1_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Port:
		//
		//	type=[WorkProduct] ("(" state=[State] ")")?;
		public ParserRule getRule() { return rule; }

		//type=[WorkProduct] ("(" state=[State] ")")?
		public Group getGroup() { return cGroup; }

		//type=[WorkProduct]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[WorkProduct]
		public CrossReference getTypeWorkProductCrossReference_0_0() { return cTypeWorkProductCrossReference_0_0; }

		//ID
		public RuleCall getTypeWorkProductIDTerminalRuleCall_0_0_1() { return cTypeWorkProductIDTerminalRuleCall_0_0_1; }

		//("(" state=[State] ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//state=[State]
		public Assignment getStateAssignment_1_1() { return cStateAssignment_1_1; }

		//[State]
		public CrossReference getStateStateCrossReference_1_1_0() { return cStateStateCrossReference_1_1_0; }

		//ID
		public RuleCall getStateStateIDTerminalRuleCall_1_1_0_1() { return cStateStateIDTerminalRuleCall_1_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTextfieldAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextfieldTextfieldParserRuleCall_2_0 = (RuleCall)cTextfieldAssignment_2.eContents().get(0);
		private final Keyword cResponsibleKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cRoleAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cRoleRoleCrossReference_4_0 = (CrossReference)cRoleAssignment_4.eContents().get(0);
		private final RuleCall cRoleRoleIDTerminalRuleCall_4_0_1 = (RuleCall)cRoleRoleCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInputsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cInPortsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cInPortsPortParserRuleCall_5_1_0 = (RuleCall)cInPortsAssignment_5_1.eContents().get(0);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cInPortsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final RuleCall cInPortsPortParserRuleCall_5_2_1_0 = (RuleCall)cInPortsAssignment_5_2_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cOutputsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cOutPortsAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cOutPortsPortParserRuleCall_6_1_0 = (RuleCall)cOutPortsAssignment_6_1.eContents().get(0);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cCommaKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cOutPortsAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cOutPortsPortParserRuleCall_6_2_1_0 = (RuleCall)cOutPortsAssignment_6_2_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSubActivitiesKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSubActivitiesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSubActivitiesActivityRefParserRuleCall_7_1_0 = (RuleCall)cSubActivitiesAssignment_7_1.eContents().get(0);
		private final Group cGroup_7_2 = (Group)cGroup_7.eContents().get(2);
		private final Keyword cCommaKeyword_7_2_0 = (Keyword)cGroup_7_2.eContents().get(0);
		private final Assignment cSubActivitiesAssignment_7_2_1 = (Assignment)cGroup_7_2.eContents().get(1);
		private final RuleCall cSubActivitiesActivityRefParserRuleCall_7_2_1_0 = (RuleCall)cSubActivitiesAssignment_7_2_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cGuidancesKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cGuidancesAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cGuidancesGuidanceCrossReference_8_1_0 = (CrossReference)cGuidancesAssignment_8_1.eContents().get(0);
		private final RuleCall cGuidancesGuidanceIDTerminalRuleCall_8_1_0_1 = (RuleCall)cGuidancesGuidanceCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cCommaKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cGuidancesAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cGuidancesGuidanceCrossReference_8_2_1_0 = (CrossReference)cGuidancesAssignment_8_2_1.eContents().get(0);
		private final RuleCall cGuidancesGuidanceIDTerminalRuleCall_8_2_1_0_1 = (RuleCall)cGuidancesGuidanceCrossReference_8_2_1_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cBehaviorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Alternatives cAlternatives_9_2 = (Alternatives)cGroup_9.eContents().get(2);
		private final Assignment cStepsAssignment_9_2_0 = (Assignment)cAlternatives_9_2.eContents().get(0);
		private final RuleCall cStepsStepParserRuleCall_9_2_0_0 = (RuleCall)cStepsAssignment_9_2_0.eContents().get(0);
		private final Assignment cDecisionsAssignment_9_2_1 = (Assignment)cAlternatives_9_2.eContents().get(1);
		private final RuleCall cDecisionsDecisionParserRuleCall_9_2_1_0 = (RuleCall)cDecisionsAssignment_9_2_1.eContents().get(0);
		private final Assignment cTransitionsAssignment_9_2_2 = (Assignment)cAlternatives_9_2.eContents().get(2);
		private final RuleCall cTransitionsTransitionParserRuleCall_9_2_2_0 = (RuleCall)cTransitionsAssignment_9_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_3 = (Keyword)cGroup_9.eContents().get(3);
		private final Keyword cSemicolonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Activity:
		//
		//	"Activity" name=ID textfield=Textfield "responsible" role=[Role] ("inputs" inPorts+=Port ("," inPorts+=Port)*)?
		//
		//	("outputs" outPorts+=Port ("," outPorts+=Port)*)? ("subActivities" subActivities+=ActivityRef (","
		//
		//	subActivities+=ActivityRef)*)? ("guidances" guidances+=[Guidance] ("," guidances+=[Guidance])*)? ("Behavior" "{"
		//
		//	(steps+=Step | decisions+=Decision | transitions+=Transition)* "}")? ";";
		public ParserRule getRule() { return rule; }

		//"Activity" name=ID textfield=Textfield "responsible" role=[Role] ("inputs" inPorts+=Port ("," inPorts+=Port)*)?
		//
		//("outputs" outPorts+=Port ("," outPorts+=Port)*)? ("subActivities" subActivities+=ActivityRef (","
		//
		//subActivities+=ActivityRef)*)? ("guidances" guidances+=[Guidance] ("," guidances+=[Guidance])*)? ("Behavior" "{"
		//
		//(steps+=Step | decisions+=Decision | transitions+=Transition)* "}")? ";"
		public Group getGroup() { return cGroup; }

		//"Activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//textfield=Textfield
		public Assignment getTextfieldAssignment_2() { return cTextfieldAssignment_2; }

		//Textfield
		public RuleCall getTextfieldTextfieldParserRuleCall_2_0() { return cTextfieldTextfieldParserRuleCall_2_0; }

		//"responsible"
		public Keyword getResponsibleKeyword_3() { return cResponsibleKeyword_3; }

		//role=[Role]
		public Assignment getRoleAssignment_4() { return cRoleAssignment_4; }

		//[Role]
		public CrossReference getRoleRoleCrossReference_4_0() { return cRoleRoleCrossReference_4_0; }

		//ID
		public RuleCall getRoleRoleIDTerminalRuleCall_4_0_1() { return cRoleRoleIDTerminalRuleCall_4_0_1; }

		//("inputs" inPorts+=Port ("," inPorts+=Port)*)?
		public Group getGroup_5() { return cGroup_5; }

		//"inputs"
		public Keyword getInputsKeyword_5_0() { return cInputsKeyword_5_0; }

		//inPorts+=Port
		public Assignment getInPortsAssignment_5_1() { return cInPortsAssignment_5_1; }

		//Port
		public RuleCall getInPortsPortParserRuleCall_5_1_0() { return cInPortsPortParserRuleCall_5_1_0; }

		//("," inPorts+=Port)*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//inPorts+=Port
		public Assignment getInPortsAssignment_5_2_1() { return cInPortsAssignment_5_2_1; }

		//Port
		public RuleCall getInPortsPortParserRuleCall_5_2_1_0() { return cInPortsPortParserRuleCall_5_2_1_0; }

		//("outputs" outPorts+=Port ("," outPorts+=Port)*)?
		public Group getGroup_6() { return cGroup_6; }

		//"outputs"
		public Keyword getOutputsKeyword_6_0() { return cOutputsKeyword_6_0; }

		//outPorts+=Port
		public Assignment getOutPortsAssignment_6_1() { return cOutPortsAssignment_6_1; }

		//Port
		public RuleCall getOutPortsPortParserRuleCall_6_1_0() { return cOutPortsPortParserRuleCall_6_1_0; }

		//("," outPorts+=Port)*
		public Group getGroup_6_2() { return cGroup_6_2; }

		//","
		public Keyword getCommaKeyword_6_2_0() { return cCommaKeyword_6_2_0; }

		//outPorts+=Port
		public Assignment getOutPortsAssignment_6_2_1() { return cOutPortsAssignment_6_2_1; }

		//Port
		public RuleCall getOutPortsPortParserRuleCall_6_2_1_0() { return cOutPortsPortParserRuleCall_6_2_1_0; }

		//("subActivities" subActivities+=ActivityRef ("," subActivities+=ActivityRef)*)?
		public Group getGroup_7() { return cGroup_7; }

		//"subActivities"
		public Keyword getSubActivitiesKeyword_7_0() { return cSubActivitiesKeyword_7_0; }

		//subActivities+=ActivityRef
		public Assignment getSubActivitiesAssignment_7_1() { return cSubActivitiesAssignment_7_1; }

		//ActivityRef
		public RuleCall getSubActivitiesActivityRefParserRuleCall_7_1_0() { return cSubActivitiesActivityRefParserRuleCall_7_1_0; }

		//("," subActivities+=ActivityRef)*
		public Group getGroup_7_2() { return cGroup_7_2; }

		//","
		public Keyword getCommaKeyword_7_2_0() { return cCommaKeyword_7_2_0; }

		//subActivities+=ActivityRef
		public Assignment getSubActivitiesAssignment_7_2_1() { return cSubActivitiesAssignment_7_2_1; }

		//ActivityRef
		public RuleCall getSubActivitiesActivityRefParserRuleCall_7_2_1_0() { return cSubActivitiesActivityRefParserRuleCall_7_2_1_0; }

		//("guidances" guidances+=[Guidance] ("," guidances+=[Guidance])*)?
		public Group getGroup_8() { return cGroup_8; }

		//"guidances"
		public Keyword getGuidancesKeyword_8_0() { return cGuidancesKeyword_8_0; }

		//guidances+=[Guidance]
		public Assignment getGuidancesAssignment_8_1() { return cGuidancesAssignment_8_1; }

		//[Guidance]
		public CrossReference getGuidancesGuidanceCrossReference_8_1_0() { return cGuidancesGuidanceCrossReference_8_1_0; }

		//ID
		public RuleCall getGuidancesGuidanceIDTerminalRuleCall_8_1_0_1() { return cGuidancesGuidanceIDTerminalRuleCall_8_1_0_1; }

		//("," guidances+=[Guidance])*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//","
		public Keyword getCommaKeyword_8_2_0() { return cCommaKeyword_8_2_0; }

		//guidances+=[Guidance]
		public Assignment getGuidancesAssignment_8_2_1() { return cGuidancesAssignment_8_2_1; }

		//[Guidance]
		public CrossReference getGuidancesGuidanceCrossReference_8_2_1_0() { return cGuidancesGuidanceCrossReference_8_2_1_0; }

		//ID
		public RuleCall getGuidancesGuidanceIDTerminalRuleCall_8_2_1_0_1() { return cGuidancesGuidanceIDTerminalRuleCall_8_2_1_0_1; }

		//("Behavior" "{" (steps+=Step | decisions+=Decision | transitions+=Transition)* "}")?
		public Group getGroup_9() { return cGroup_9; }

		//"Behavior"
		public Keyword getBehaviorKeyword_9_0() { return cBehaviorKeyword_9_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9_1() { return cLeftCurlyBracketKeyword_9_1; }

		//(steps+=Step | decisions+=Decision | transitions+=Transition)*
		public Alternatives getAlternatives_9_2() { return cAlternatives_9_2; }

		//steps+=Step
		public Assignment getStepsAssignment_9_2_0() { return cStepsAssignment_9_2_0; }

		//Step
		public RuleCall getStepsStepParserRuleCall_9_2_0_0() { return cStepsStepParserRuleCall_9_2_0_0; }

		//decisions+=Decision
		public Assignment getDecisionsAssignment_9_2_1() { return cDecisionsAssignment_9_2_1; }

		//Decision
		public RuleCall getDecisionsDecisionParserRuleCall_9_2_1_0() { return cDecisionsDecisionParserRuleCall_9_2_1_0; }

		//transitions+=Transition
		public Assignment getTransitionsAssignment_9_2_2() { return cTransitionsAssignment_9_2_2; }

		//Transition
		public RuleCall getTransitionsTransitionParserRuleCall_9_2_2_0() { return cTransitionsTransitionParserRuleCall_9_2_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9_3() { return cRightCurlyBracketKeyword_9_3; }

		//";"
		public Keyword getSemicolonKeyword_10() { return cSemicolonKeyword_10; }
	}

	public class ActivityRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityRef");
		private final Assignment cTypeAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cTypeActivityCrossReference_0 = (CrossReference)cTypeAssignment.eContents().get(0);
		private final RuleCall cTypeActivityIDTerminalRuleCall_0_1 = (RuleCall)cTypeActivityCrossReference_0.eContents().get(1);
		
		//ActivityRef:
		//
		//	type=[Activity];
		public ParserRule getRule() { return rule; }

		//type=[Activity]
		public Assignment getTypeAssignment() { return cTypeAssignment; }

		//[Activity]
		public CrossReference getTypeActivityCrossReference_0() { return cTypeActivityCrossReference_0; }

		//ID
		public RuleCall getTypeActivityIDTerminalRuleCall_0_1() { return cTypeActivityIDTerminalRuleCall_0_1; }
	}

	public class NodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Node");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStepParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDecisionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Node:
		//
		//	Step | Decision;
		public ParserRule getRule() { return rule; }

		//Step | Decision
		public Alternatives getAlternatives() { return cAlternatives; }

		//Step
		public RuleCall getStepParserRuleCall_0() { return cStepParserRuleCall_0; }

		//Decision
		public RuleCall getDecisionParserRuleCall_1() { return cDecisionParserRuleCall_1; }
	}

	public class DecisionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Decision");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDecisionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Decision:
		//
		//	"Decision" name=ID;
		public ParserRule getRule() { return rule; }

		//"Decision" name=ID
		public Group getGroup() { return cGroup; }

		//"Decision"
		public Keyword getDecisionKeyword_0() { return cDecisionKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class StepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Step");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStepKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Step:
		//
		//	"Step" name=ID;
		public ParserRule getRule() { return rule; }

		//"Step" name=ID
		public Group getGroup() { return cGroup; }

		//"Step"
		public Keyword getStepKeyword_0() { return cStepKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class TransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInitialTransitionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFinalTransitionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNonInitialTransitionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cDecisionTransitionParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Transition:
		//
		//	InitialTransition | FinalTransition | NonInitialTransition | DecisionTransition;
		public ParserRule getRule() { return rule; }

		//InitialTransition | FinalTransition | NonInitialTransition | DecisionTransition
		public Alternatives getAlternatives() { return cAlternatives; }

		//InitialTransition
		public RuleCall getInitialTransitionParserRuleCall_0() { return cInitialTransitionParserRuleCall_0; }

		//FinalTransition
		public RuleCall getFinalTransitionParserRuleCall_1() { return cFinalTransitionParserRuleCall_1; }

		//NonInitialTransition
		public RuleCall getNonInitialTransitionParserRuleCall_2() { return cNonInitialTransitionParserRuleCall_2; }

		//DecisionTransition
		public RuleCall getDecisionTransitionParserRuleCall_3() { return cDecisionTransitionParserRuleCall_3; }
	}

	public class InitialTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InitialTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cInitialKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cToNodeCrossReference_3_0 = (CrossReference)cToAssignment_3.eContents().get(0);
		private final RuleCall cToNodeIDTerminalRuleCall_3_0_1 = (RuleCall)cToNodeCrossReference_3_0.eContents().get(1);
		
		//InitialTransition:
		//
		//	"Transition" "initial" "to" to=[Node];
		public ParserRule getRule() { return rule; }

		//"Transition" "initial" "to" to=[Node]
		public Group getGroup() { return cGroup; }

		//"Transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//"initial"
		public Keyword getInitialKeyword_1() { return cInitialKeyword_1; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//to=[Node]
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//[Node]
		public CrossReference getToNodeCrossReference_3_0() { return cToNodeCrossReference_3_0; }

		//ID
		public RuleCall getToNodeIDTerminalRuleCall_3_0_1() { return cToNodeIDTerminalRuleCall_3_0_1; }
	}

	public class FinalTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FinalTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFromNodeCrossReference_1_0 = (CrossReference)cFromAssignment_1.eContents().get(0);
		private final RuleCall cFromNodeIDTerminalRuleCall_1_0_1 = (RuleCall)cFromNodeCrossReference_1_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFinalKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//FinalTransition:
		//
		//	"Transition" from=[Node] "to" "final";
		public ParserRule getRule() { return rule; }

		//"Transition" from=[Node] "to" "final"
		public Group getGroup() { return cGroup; }

		//"Transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//from=[Node]
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//[Node]
		public CrossReference getFromNodeCrossReference_1_0() { return cFromNodeCrossReference_1_0; }

		//ID
		public RuleCall getFromNodeIDTerminalRuleCall_1_0_1() { return cFromNodeIDTerminalRuleCall_1_0_1; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//"final"
		public Keyword getFinalKeyword_3() { return cFinalKeyword_3; }
	}

	public class DecisionTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DecisionTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFromDecisionCrossReference_1_0 = (CrossReference)cFromAssignment_1.eContents().get(0);
		private final RuleCall cFromDecisionIDTerminalRuleCall_1_0_1 = (RuleCall)cFromDecisionCrossReference_1_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cToNodeCrossReference_3_0 = (CrossReference)cToAssignment_3.eContents().get(0);
		private final RuleCall cToNodeIDTerminalRuleCall_3_0_1 = (RuleCall)cToNodeCrossReference_3_0.eContents().get(1);
		private final Assignment cGuardAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cGuardSTRINGTerminalRuleCall_4_0 = (RuleCall)cGuardAssignment_4.eContents().get(0);
		
		//DecisionTransition:
		//
		//	"Transition" from=[Decision] "to" to=[Node] guard=STRING;
		public ParserRule getRule() { return rule; }

		//"Transition" from=[Decision] "to" to=[Node] guard=STRING
		public Group getGroup() { return cGroup; }

		//"Transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//from=[Decision]
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//[Decision]
		public CrossReference getFromDecisionCrossReference_1_0() { return cFromDecisionCrossReference_1_0; }

		//ID
		public RuleCall getFromDecisionIDTerminalRuleCall_1_0_1() { return cFromDecisionIDTerminalRuleCall_1_0_1; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//to=[Node]
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//[Node]
		public CrossReference getToNodeCrossReference_3_0() { return cToNodeCrossReference_3_0; }

		//ID
		public RuleCall getToNodeIDTerminalRuleCall_3_0_1() { return cToNodeIDTerminalRuleCall_3_0_1; }

		//guard=STRING
		public Assignment getGuardAssignment_4() { return cGuardAssignment_4; }

		//STRING
		public RuleCall getGuardSTRINGTerminalRuleCall_4_0() { return cGuardSTRINGTerminalRuleCall_4_0; }
	}

	public class NonInitialTransitionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NonInitialTransition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransitionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cFromNodeCrossReference_1_0 = (CrossReference)cFromAssignment_1.eContents().get(0);
		private final RuleCall cFromNodeIDTerminalRuleCall_1_0_1 = (RuleCall)cFromNodeCrossReference_1_0.eContents().get(1);
		private final Keyword cToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cToNodeCrossReference_3_0 = (CrossReference)cToAssignment_3.eContents().get(0);
		private final RuleCall cToNodeIDTerminalRuleCall_3_0_1 = (RuleCall)cToNodeCrossReference_3_0.eContents().get(1);
		
		//NonInitialTransition:
		//
		//	"Transition" from=[Node] "to" to=[Node];
		public ParserRule getRule() { return rule; }

		//"Transition" from=[Node] "to" to=[Node]
		public Group getGroup() { return cGroup; }

		//"Transition"
		public Keyword getTransitionKeyword_0() { return cTransitionKeyword_0; }

		//from=[Node]
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//[Node]
		public CrossReference getFromNodeCrossReference_1_0() { return cFromNodeCrossReference_1_0; }

		//ID
		public RuleCall getFromNodeIDTerminalRuleCall_1_0_1() { return cFromNodeIDTerminalRuleCall_1_0_1; }

		//"to"
		public Keyword getToKeyword_2() { return cToKeyword_2; }

		//to=[Node]
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//[Node]
		public CrossReference getToNodeCrossReference_3_0() { return cToNodeCrossReference_3_0; }

		//ID
		public RuleCall getToNodeIDTerminalRuleCall_3_0_1() { return cToNodeIDTerminalRuleCall_3_0_1; }
	}

	public class TextfieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Textfield");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cLabelKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cLabelAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_0_1_0 = (RuleCall)cLabelAssignment_0_1.eContents().get(0);
		private final Keyword cSummaryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSummaryAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSummarySTRINGTerminalRuleCall_2_0 = (RuleCall)cSummaryAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cDescriptionKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cDescriptionAssignment_3_1.eContents().get(0);
		
		//Textfield:
		//
		//	("label" label=STRING)? "summary" summary=STRING ("description" description=STRING)?;
		public ParserRule getRule() { return rule; }

		//("label" label=STRING)? "summary" summary=STRING ("description" description=STRING)?
		public Group getGroup() { return cGroup; }

		//("label" label=STRING)?
		public Group getGroup_0() { return cGroup_0; }

		//"label"
		public Keyword getLabelKeyword_0_0() { return cLabelKeyword_0_0; }

		//label=STRING
		public Assignment getLabelAssignment_0_1() { return cLabelAssignment_0_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_0_1_0() { return cLabelSTRINGTerminalRuleCall_0_1_0; }

		//"summary"
		public Keyword getSummaryKeyword_1() { return cSummaryKeyword_1; }

		//summary=STRING
		public Assignment getSummaryAssignment_2() { return cSummaryAssignment_2; }

		//STRING
		public RuleCall getSummarySTRINGTerminalRuleCall_2_0() { return cSummarySTRINGTerminalRuleCall_2_0; }

		//("description" description=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"description"
		public Keyword getDescriptionKeyword_3_0() { return cDescriptionKeyword_3_0; }

		//description=STRING
		public Assignment getDescriptionAssignment_3_1() { return cDescriptionAssignment_3_1; }

		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_1_0() { return cDescriptionSTRINGTerminalRuleCall_3_1_0; }
	}
	
	
	private ModelElements pModel;
	private NamedElementElements pNamedElement;
	private RoleElements pRole;
	private WorkProductTypeElements pWorkProductType;
	private WorkProductElements pWorkProduct;
	private GuidanceTypeElements pGuidanceType;
	private GuidanceElements pGuidance;
	private StateElements pState;
	private PortElements pPort;
	private ActivityElements pActivity;
	private ActivityRefElements pActivityRef;
	private NodeElements pNode;
	private DecisionElements pDecision;
	private StepElements pStep;
	private TransitionElements pTransition;
	private InitialTransitionElements pInitialTransition;
	private FinalTransitionElements pFinalTransition;
	private DecisionTransitionElements pDecisionTransition;
	private NonInitialTransitionElements pNonInitialTransition;
	private TextfieldElements pTextfield;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public FoWGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.protos.FlowOfWork.core.fow.FoW".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//
	//	(activities+=Activity | roles+=Role | workProducts+=WorkProduct | workProductTypes+=WorkProductType |
	//
	//	guidances+=Guidance | guidanceTypes+=GuidanceType | states+=State)*;
	public ModelElements getModelAccess() {
		return (pModel != null) ? pModel : (pModel = new ModelElements());
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}

	//NamedElement:
	//
	//	Role | WorkProductType | WorkProduct | GuidanceType | Guidance | Activity;
	public NamedElementElements getNamedElementAccess() {
		return (pNamedElement != null) ? pNamedElement : (pNamedElement = new NamedElementElements());
	}
	
	public ParserRule getNamedElementRule() {
		return getNamedElementAccess().getRule();
	}

	//Role:
	//
	//	"Role" name=ID textfield=Textfield ";";
	public RoleElements getRoleAccess() {
		return (pRole != null) ? pRole : (pRole = new RoleElements());
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}

	//WorkProductType:
	//
	//	"WorkProductType" name=ID textfield=Textfield ";";
	public WorkProductTypeElements getWorkProductTypeAccess() {
		return (pWorkProductType != null) ? pWorkProductType : (pWorkProductType = new WorkProductTypeElements());
	}
	
	public ParserRule getWorkProductTypeRule() {
		return getWorkProductTypeAccess().getRule();
	}

	//WorkProduct:
	//
	//	"WorkProduct" name=ID ":" type=[WorkProductType] textfield=Textfield //('States' states+=State (',' states+=State)*)? 
	//
	//	";";
	public WorkProductElements getWorkProductAccess() {
		return (pWorkProduct != null) ? pWorkProduct : (pWorkProduct = new WorkProductElements());
	}
	
	public ParserRule getWorkProductRule() {
		return getWorkProductAccess().getRule();
	}

	//GuidanceType:
	//
	//	"GuidanceType" name=ID textfield=Textfield ";";
	public GuidanceTypeElements getGuidanceTypeAccess() {
		return (pGuidanceType != null) ? pGuidanceType : (pGuidanceType = new GuidanceTypeElements());
	}
	
	public ParserRule getGuidanceTypeRule() {
		return getGuidanceTypeAccess().getRule();
	}

	//Guidance:
	//
	//	"Guidance" name=ID ":" type=[GuidanceType] textfield=Textfield ";";
	public GuidanceElements getGuidanceAccess() {
		return (pGuidance != null) ? pGuidance : (pGuidance = new GuidanceElements());
	}
	
	public ParserRule getGuidanceRule() {
		return getGuidanceAccess().getRule();
	}

	//State:
	//
	//	"State" name=ID ";";
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Port:
	//
	//	type=[WorkProduct] ("(" state=[State] ")")?;
	public PortElements getPortAccess() {
		return (pPort != null) ? pPort : (pPort = new PortElements());
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}

	//Activity:
	//
	//	"Activity" name=ID textfield=Textfield "responsible" role=[Role] ("inputs" inPorts+=Port ("," inPorts+=Port)*)?
	//
	//	("outputs" outPorts+=Port ("," outPorts+=Port)*)? ("subActivities" subActivities+=ActivityRef (","
	//
	//	subActivities+=ActivityRef)*)? ("guidances" guidances+=[Guidance] ("," guidances+=[Guidance])*)? ("Behavior" "{"
	//
	//	(steps+=Step | decisions+=Decision | transitions+=Transition)* "}")? ";";
	public ActivityElements getActivityAccess() {
		return (pActivity != null) ? pActivity : (pActivity = new ActivityElements());
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//ActivityRef:
	//
	//	type=[Activity];
	public ActivityRefElements getActivityRefAccess() {
		return (pActivityRef != null) ? pActivityRef : (pActivityRef = new ActivityRefElements());
	}
	
	public ParserRule getActivityRefRule() {
		return getActivityRefAccess().getRule();
	}

	//Node:
	//
	//	Step | Decision;
	public NodeElements getNodeAccess() {
		return (pNode != null) ? pNode : (pNode = new NodeElements());
	}
	
	public ParserRule getNodeRule() {
		return getNodeAccess().getRule();
	}

	//Decision:
	//
	//	"Decision" name=ID;
	public DecisionElements getDecisionAccess() {
		return (pDecision != null) ? pDecision : (pDecision = new DecisionElements());
	}
	
	public ParserRule getDecisionRule() {
		return getDecisionAccess().getRule();
	}

	//Step:
	//
	//	"Step" name=ID;
	public StepElements getStepAccess() {
		return (pStep != null) ? pStep : (pStep = new StepElements());
	}
	
	public ParserRule getStepRule() {
		return getStepAccess().getRule();
	}

	//Transition:
	//
	//	InitialTransition | FinalTransition | NonInitialTransition | DecisionTransition;
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//InitialTransition:
	//
	//	"Transition" "initial" "to" to=[Node];
	public InitialTransitionElements getInitialTransitionAccess() {
		return (pInitialTransition != null) ? pInitialTransition : (pInitialTransition = new InitialTransitionElements());
	}
	
	public ParserRule getInitialTransitionRule() {
		return getInitialTransitionAccess().getRule();
	}

	//FinalTransition:
	//
	//	"Transition" from=[Node] "to" "final";
	public FinalTransitionElements getFinalTransitionAccess() {
		return (pFinalTransition != null) ? pFinalTransition : (pFinalTransition = new FinalTransitionElements());
	}
	
	public ParserRule getFinalTransitionRule() {
		return getFinalTransitionAccess().getRule();
	}

	//DecisionTransition:
	//
	//	"Transition" from=[Decision] "to" to=[Node] guard=STRING;
	public DecisionTransitionElements getDecisionTransitionAccess() {
		return (pDecisionTransition != null) ? pDecisionTransition : (pDecisionTransition = new DecisionTransitionElements());
	}
	
	public ParserRule getDecisionTransitionRule() {
		return getDecisionTransitionAccess().getRule();
	}

	//NonInitialTransition:
	//
	//	"Transition" from=[Node] "to" to=[Node];
	public NonInitialTransitionElements getNonInitialTransitionAccess() {
		return (pNonInitialTransition != null) ? pNonInitialTransition : (pNonInitialTransition = new NonInitialTransitionElements());
	}
	
	public ParserRule getNonInitialTransitionRule() {
		return getNonInitialTransitionAccess().getRule();
	}

	//Textfield:
	//
	//	("label" label=STRING)? "summary" summary=STRING ("description" description=STRING)?;
	public TextfieldElements getTextfieldAccess() {
		return (pTextfield != null) ? pTextfield : (pTextfield = new TextfieldElements());
	}
	
	public ParserRule getTextfieldRule() {
		return getTextfieldAccess().getRule();
	}

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
