/*******************************************************************************
 * Copyright (c) 2013 protos software gmbh (http://www.protos.de).
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * CONTRIBUTORS:
 * 		Thomas Schuetz (initial contribution)
 * 
 *******************************************************************************/
grammar de.protos.FlowOfWork.core.fow.FoW with org.eclipse.xtext.common.Terminals

generate foW "http://www.protos.de/FlowOfWork/core/fow/FoW"

Model:
	(
		activities+=Activity |
		roles+=Role |
		workProducts+=WorkProduct |
		workProductTypes+=WorkProductType |
		guidances+=Guidance |
		guidanceTypes+=GuidanceType |
		states+=State
	)*
	;
	
NamedElement: Role | WorkProductType | WorkProduct | GuidanceType | Guidance | Activity ;
	
Role:
	'Role' name=ID 
	textfield=Textfield
	';'
;

WorkProductType:
	'WorkProductType' name=ID
	textfield=Textfield
	';'
;

WorkProduct:
	'WorkProduct' name=ID ':' type=[WorkProductType]
	textfield=Textfield
	//('States' states+=State (',' states+=State)*)? 
	';'
;

GuidanceType:
	'GuidanceType' name=ID
	textfield=Textfield
	';'
;

Guidance:
	'Guidance' name=ID ':' type=[GuidanceType]
	textfield=Textfield
	';'
;

State:
	'State' name=ID ';'
;

Port:
	type=[WorkProduct] ('('state=[State]')')?
;

Activity:
	'Activity' name=ID
	textfield=Textfield
	'responsible' role=[Role]
	('inputs' inPorts+=Port (',' inPorts+=Port)*)? 
	('outputs' outPorts+=Port (',' outPorts+=Port)*)? 
	('subActivities' subActivities+=ActivityRef (',' subActivities+=ActivityRef)* )?
	('guidances' guidances+=[Guidance] (',' guidances+=[Guidance])*)?
	(	'Behavior'  '{'
		(
			steps+=Step |
			decisions+=Decision |
			transitions+=Transition
		)*	
		'}'
	)?
	';'
;
	
ActivityRef:
	type=[Activity];

Node: Step | Decision ;

Decision:
	'Decision' name=ID
	(label=STRING)?
;

Step:
	'Step' name=ID
	(label=STRING)?
;

Transition: InitialTransition | FinalTransition | NonInitialTransition | DecisionTransition;

InitialTransition:
	'Transition' 'initial' 'to' to=[Node]
;

FinalTransition:
	'Transition' from=[Node] 'to' 'final'
;

DecisionTransition:
	'Transition' from=[Decision] 'to' to=[Node] guard=STRING
;

NonInitialTransition:
	'Transition' from=[Node] 'to' to=[Node]
;



Textfield:
	('label' label=STRING)?
	'summary' summary=STRING
	('description' description=STRING)?
;

